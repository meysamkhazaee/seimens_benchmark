        -:    0:Source:replace_instrumented.c
        -:    0:Graph:replace_instrumented.gcno
        -:    0:Data:replace_instrumented.gcda
        -:    0:Runs:5542
        -:    1:/*  -*- Last-Edit:  Mon Dec  7 10:31:51 1992 by Tarak S. Goradia; -*- */
        -:    2:
        -:    3:extern void	exit();
        -:    4:# include <stdio.h>
        -:    5:
        -:    6:void	Caseerror();
        -:    7:
        -:    8:typedef char	bool;
        -:    9:# define false 0
        -:   10:# define true  1
        -:   11:# define NULL 0
        -:   12:
        -:   13:# define MAXSTR 100
        -:   14:# define MAXPAT MAXSTR
        -:   15:
        -:   16:# define ENDSTR  '\0'
        -:   17:# define ESCAPE  '@'
        -:   18:# define CLOSURE '*'
        -:   19:# define BOL     '%'
        -:   20:# define EOL     '$'
        -:   21:# define ANY     '?'
        -:   22:# define CCL     '['
        -:   23:# define CCLEND  ']'
        -:   24:# define NEGATE  '^'
        -:   25:# define NCCL    '!'
        -:   26:# define LITCHAR 'c'
        -:   27:# define DITTO   -1
        -:   28:# define DASH    '-'
        -:   29:
        -:   30:# define TAB     9
        -:   31:# define NEWLINE 10
        -:   32:
        -:   33:# define CLOSIZE 1
        -:   34:FILE* file_name = NULL;
        -:   35:
        -:   36:typedef char	character;
        -:   37:typedef char string[MAXSTR];
        -:   38:
        -:   39:bool
    13809:   40:get_line(s, maxsize)
        -:   41:char *s;
        -:   42:int	maxsize;
        -:   43:{
    13809:   44:	fprintf(file_name,"P11,");
        -:   45:    char *result;
    13809:   46:    result = fgets(s, maxsize, stdin);
    13809:   47:    return (result != NULL);
        -:   48:}
        -:   49:
        -:   50:int
   168966:   51:addstr(c, outset, j, maxset)
        -:   52:char c;
        -:   53:char *outset;
        -:   54:int	*j;
        -:   55:int	maxset;
        -:   56:{
        -:   57:    bool result;
   168966:   58:	fprintf(file_name,"P12,");
   168966:   59:    if (*j >= maxset)
        -:   60:	{
    37081:   61:		fprintf(file_name,"P13,");
    37081:   62:		result = false;
        -:   63:	}
        -:   64:    else 
        -:   65:	{
   131885:   66:		fprintf(file_name,"P14,");
   131885:   67:		outset[*j] = c;
   131885:   68:		*j = *j + 1;
   131885:   69:		result = true;
        -:   70:    }
   168966:   71:	fprintf(file_name,"P15,");
   168966:   72:    return result;
        -:   73:}
        -:   74:
        -:   75:char
    72118:   76:esc(s, i)
        -:   77:char *s;
        -:   78:int	*i;
        -:   79:{
        -:   80:    char result;
    72118:   81:	fprintf(file_name,"P16,");
    72118:   82:    if (s[*i] != ESCAPE)
        -:   83:	{
    67260:   84:		fprintf(file_name,"P17,");
    67260:   85:		result = s[*i];
        -:   86:	}
     4858:   87:    else if (s[*i + 1] == ENDSTR)
        -:   88:	{
       52:   89:		fprintf(file_name,"P18,");
       52:   90:		result = ESCAPE;
        -:   91:	}
        -:   92:	else 
        -:   93:	{
     4806:   94:	    *i = *i + 1;
     4806:   95:	    fprintf(file_name,"P19,");
     4806:   96:		if (s[*i] == 'n')
        -:   97:		{
      969:   98:			fprintf(file_name,"P20,");
      969:   99:			result = NEWLINE;
        -:  100:		}
     3837:  101:	    else if (s[*i] == 't')
        -:  102:		{
      756:  103:			fprintf(file_name,"P21,");
      756:  104:			result = TAB;
        -:  105:		}
        -:  106:		else
        -:  107:		{
     3081:  108:			fprintf(file_name,"P22,");
     3081:  109:			result = s[*i];
        -:  110:		}  
        -:  111:	}
    72118:  112:	fprintf(file_name,"P23,");
    72118:  113:    return result;
        -:  114:}
        -:  115:
        -:  116:void change();
        -:  117:
        -:  118:void
     5677:  119:dodash(delim, src, i, dest, j, maxset)
        -:  120:char delim;
        -:  121:char *src;
        -:  122:int	*i;
        -:  123:char *dest;
        -:  124:int	*j;
        -:  125:int	maxset;
        -:  126:{
        -:  127:    int	k;
        -:  128:    bool junk;
        -:  129:    char escjunk;
     5677:  130:	fprintf(file_name,"P24,");
    21685:  131:    while ((src[*i] != delim) && (src[*i] != ENDSTR)) 
        -:  132:    {
    16008:  133:		fprintf(file_name,"P25,");
    16008:  134:		if (src[*i - 1] == ESCAPE) 
        -:  135:		{
      411:  136:			fprintf(file_name,"P26,");
      411:  137:			escjunk = esc(src, i);
      411:  138:			junk = addstr(escjunk, dest, j, maxset);
        -:  139:		} 
    15597:  140:		else if (src[*i] != DASH)
        -:  141:		{
     9561:  142:			fprintf(file_name,"P27,");
     9561:  143:			junk = addstr(src[*i], dest, j, maxset);
        -:  144:		}
     6036:  145:		else if (*j <= 1 || src[*i + 1] == ENDSTR)
        -:  146:		{
       92:  147:			fprintf(file_name,"P28,");
       92:  148:			junk = addstr(DASH, dest, j, maxset);
        -:  149:		}
     5944:  150:		else if ((isalnum(src[*i - 1])) && (isalnum(src[*i + 1])) && (src[*i - 1] <= src[*i + 1]))
        -:  151:		{
     4345:  152:			fprintf(file_name,"P29,");
    35667:  153:			for (k = src[*i-1]+1; k<=src[*i+1]; k++) 
        -:  154:			{
    31322:  155:				fprintf(file_name,"P30,");
    31322:  156:				junk = addstr(k, dest, j, maxset);
        -:  157:			}
     4345:  158:			fprintf(file_name,"P31,");	
     4345:  159:			*i = *i + 1;	
        -:  160:		} 
        -:  161:		else
        -:  162:		{
     1599:  163:			fprintf(file_name,"P32,");
     1599:  164:			junk = addstr(DASH, dest, j, maxset);
        -:  165:		}	
    16008:  166:		fprintf(file_name,"P33,");
    16008:  167:		(*i) = (*i) + 1;
        -:  168:    }
     5677:  169:}
        -:  170:
        -:  171:bool
     5677:  172:getccl(arg, i, pat, j)
        -:  173:char *arg;
        -:  174:int	*i;
        -:  175:char *pat;
        -:  176:int	*j;
        -:  177:{
        -:  178:    int	jstart;
        -:  179:    bool junk;
     5677:  180:    *i = *i + 1;
     5677:  181:	fprintf(file_name,"P34,");
     5677:  182:    if (arg[*i] == NEGATE) 
        -:  183:	{
     2809:  184:		fprintf(file_name,"P35,");
     2809:  185:		junk = addstr(NCCL, pat, j, MAXPAT);
     2809:  186:		*i = *i + 1;
        -:  187:    } 
        -:  188:	else
        -:  189:	{
     2868:  190:		fprintf(file_name,"P36,");
     2868:  191:		junk = addstr(CCL, pat, j, MAXPAT);
        -:  192:	}
     5677:  193:	fprintf(file_name,"P37,");
     5677:  194:    jstart = *j;
     5677:  195:    junk = addstr(0, pat, j, MAXPAT);
     5677:  196:    dodash(CCLEND, arg, i, pat, j, MAXPAT);
     5677:  197:    pat[jstart] = *j - jstart - 1;
     5677:  198:    return (arg[*i] == CCLEND);
        -:  199:}
        -:  200:
        -:  201:void
     1250:  202:stclose(pat, j, lastj)
        -:  203:char *pat;
        -:  204:int	*j;
        -:  205:int	lastj;
        -:  206:{
        -:  207:    int	jt;
        -:  208:    int	jp;
        -:  209:    bool junk;
     1250:  210:	fprintf(file_name,"P38,");
     3749:  211:    for (jp = *j - 1; jp >= lastj ; jp--) 
        -:  212:    {
     2499:  213:		fprintf(file_name,"P39,");
     2499:  214:		jt = jp + CLOSIZE;
     2499:  215:		junk = addstr(pat[jp], pat, &jt, MAXPAT);
        -:  216:    }
     1250:  217:	fprintf(file_name,"P40,");
     1250:  218:    *j = *j + CLOSIZE;
     1250:  219:    pat[lastj] = CLOSURE;
     1250:  220:}
        -:  221:
     1690:  222:bool in_set_2(c)
        -:  223:char c;
        -:  224:{
     1690:  225:	fprintf(file_name,"P41,");
     1690:  226:  	return (c == BOL || c == EOL || c == CLOSURE || c != LITCHAR);
        -:  227:}      
        -:  228:
   249533:  229:bool in_pat_set(c)
        -:  230:char c;
        -:  231:{
   249533:  232:	fprintf(file_name,"P42,");
  249533*:  233:  	return (c == LITCHAR || c == BOL || c == EOL || c == ANY || c == CCL || c == NCCL || c == CLOSURE);
        -:  234:}      
        -:  235:
        -:  236:int
     5520:  237:makepat(arg, start, delim, pat)
        -:  238:char	*arg;
        -:  239:int	start;
        -:  240:char	delim;
        -:  241:char	*pat;
        -:  242:{
        -:  243:    int	result;
        -:  244:    int	i, j, lastj, lj;
        -:  245:    bool done, junk;
        -:  246:    bool getres;
        -:  247:    char escjunk;
        -:  248:
     5520:  249:    j = 0;
     5520:  250:    i = start;
     5520:  251:    lastj = 0;
     5520:  252:    done = false;
     5520:  253:	fprintf(file_name,"P43,");
    41467:  254:    while ((!done) && (arg[i] != delim) && (arg[i] != ENDSTR)) 
        -:  255:	{
    35947:  256:		lj = j;
    35947:  257:		fprintf(file_name,"P44,");
    35947:  258:		if ((arg[i] == ANY))
        -:  259:		{
     3180:  260:			fprintf(file_name,"P45,");
     3180:  261:			junk = addstr(ANY, pat, &j, MAXPAT);
        -:  262:		}
    32767:  263:		else if ((arg[i] == BOL) && (i == start))
        -:  264:		{
      387:  265:			fprintf(file_name,"P46,");
      387:  266:			junk = addstr(BOL, pat, &j, MAXPAT);
        -:  267:		}
    32380:  268:		else if ((arg[i] == EOL) && (arg[i+1] == delim))
        -:  269:		{
      344:  270:			fprintf(file_name,"P47,");
      344:  271:			junk = addstr(EOL, pat, &j, MAXPAT);
        -:  272:		}
    32036:  273:		else if ((arg[i] == CCL)) 
        -:  274:		{
     5677:  275:			fprintf(file_name,"P48,");
     5677:  276:			getres = getccl(arg, &i, pat, &j);
     5677:  277:			done = (bool)(getres == false);
        -:  278:		} 
    26359:  279:		else if ((arg[i] == CLOSURE) && (i > start)) 
        -:  280:		{
     1690:  281:			fprintf(file_name,"P49,");
     1690:  282:			lj = lastj;
     1690:  283:			if (in_set_2(pat[lj]))
        -:  284:			{
      440:  285:				fprintf(file_name,"P50,");
      440:  286:				done = true;
        -:  287:			}	
        -:  288:			else
        -:  289:			{
     1250:  290:				fprintf(file_name,"P51,");
     1250:  291:				stclose(pat, &j, lastj);
        -:  292:			}
        -:  293:		} 
        -:  294:		else 
        -:  295:		{
    24669:  296:			fprintf(file_name,"P52,");
    24669:  297:			junk = addstr(LITCHAR, pat, &j, MAXPAT);
    24669:  298:			escjunk = esc(arg, &i);
    24669:  299:			junk = addstr(escjunk, pat, &j, MAXPAT);
        -:  300:		}
        -:  301:		
    35947:  302:		lastj = lj;
    35947:  303:		fprintf(file_name,"P53,");
    35947:  304:		if ((!done))
        -:  305:		{
    35201:  306:			fprintf(file_name,"P54,");
    35201:  307:			i = i + 1;
        -:  308:		}
        -:  309:    }	
     5520:  310:    junk = addstr(ENDSTR, pat, &j, MAXPAT);
     5520:  311:    fprintf(file_name,"P55,");
     5520:  312:	if ((done) || (arg[i] != delim))
        -:  313:	{
      746:  314:		fprintf(file_name,"P56,");
      746:  315:		result = 0;
        -:  316:	}
     4774:  317:    else if ((!junk))
        -:  318:	{
       48:  319:		fprintf(file_name,"P57,");
       48:  320:		result = 0;
        -:  321:	}
        -:  322:	else
        -:  323:	{
     4726:  324:		fprintf(file_name,"P58,");
     4726:  325:		result = i;
        -:  326:	}
     5520:  327:	fprintf(file_name,"P59,");
     5520:  328:    return result;
        -:  329:}
        -:  330:
        -:  331:int
     5520:  332:getpat(arg, pat)
        -:  333:char* arg;
        -:  334:char* pat;
        -:  335:{
     5520:  336:	fprintf(file_name,"P60,");
        -:  337:    int	makeres;
     5520:  338:    makeres = makepat(arg, 0, ENDSTR, pat);
     5520:  339:    return (makeres > 0);
        -:  340:}
        -:  341:
        -:  342:int
     4567:  343:makesub(arg, from, delim, sub)
        -:  344:char* arg;
        -:  345:int	from;
        -:  346:character delim;
        -:  347:char*	sub;
        -:  348:{
        -:  349:    int  result;
        -:  350:    int	i, j;
        -:  351:    bool	junk;
        -:  352:    character	escjunk;
        -:  353:
     4567:  354:    j = 0;
     4567:  355:    i = from;
        -:  356:
     4567:  357:	fprintf(file_name,"P61,");
    53359:  358:    while ((arg[i] != delim) && (arg[i] != ENDSTR)) 
        -:  359:	{
    48792:  360:		fprintf(file_name,"P62,");
    48792:  361:		if ((arg[i] == (unsigned)('&')))
        -:  362:		{
     1754:  363:			fprintf(file_name,"P63,");
     1754:  364:			junk = addstr(DITTO, sub, &j, MAXPAT);
        -:  365:		}
        -:  366:		else 
        -:  367:		{
    47038:  368:			fprintf(file_name,"P64,");
    47038:  369:			escjunk = esc(arg, &i);
    47038:  370:			junk = addstr(escjunk, sub, &j, MAXPAT);
        -:  371:		}
    48792:  372:		fprintf(file_name,"P65,");
    48792:  373:		i = i + 1;
        -:  374:    }
     4567:  375:	fprintf(file_name,"P66,");
     4567:  376:    if (arg[i] != delim)
        -:  377:	{
    #####:  378:		fprintf(file_name,"P67,");
    #####:  379:		result = 0;
        -:  380:	}
        -:  381:    else 
        -:  382:	{
     4567:  383:		junk = addstr(ENDSTR, &(*sub), &j, MAXPAT);
     4567:  384:		fprintf(file_name,"P68,");
     4567:  385:		if ((!junk))
        -:  386:		{
       62:  387:			fprintf(file_name,"P69,");
       62:  388:			result = 0;
        -:  389:		}
        -:  390:		else
        -:  391:		{
     4505:  392:			fprintf(file_name,"P70,");
     4505:  393:			result = i;
        -:  394:		}	
        -:  395:    }
     4567:  396:	fprintf(file_name,"P71,");	
     4567:  397:    return result;
        -:  398:}
        -:  399:
        -:  400:bool
     4567:  401:getsub(arg, sub)
        -:  402:char* arg;
        -:  403:char* sub;
        -:  404:{
     4567:  405:	fprintf(file_name,"P72,");
        -:  406:    int	makeres;
     4567:  407:    makeres = makesub(arg, 0, ENDSTR, sub);
     4567:  408:    return (makeres > 0);
        -:  409:}
        -:  410:
        -:  411:void subline();
        -:  412:
        -:  413:bool
    30769:  414:locate(c, pat, offset)
        -:  415:character c;
        -:  416:char* pat;
        -:  417:int	offset;
        -:  418:{
        -:  419:    int	i;
        -:  420:    bool flag;
    30769:  421:    flag = false;
    30769:  422:    i = offset + pat[offset];
        -:  423:
    30769:  424:    fprintf(file_name,"P73,");
   255038:  425:	while ((i > offset))
        -:  426:    {
   224269:  427:		fprintf(file_name,"P74,");
   224269:  428:		if (c == pat[i]) 
        -:  429:		{
     4981:  430:			fprintf(file_name,"P75,");
     4981:  431:			flag = true;
     4981:  432:			i = offset;
        -:  433:		} 
        -:  434:		else
        -:  435:		{
   219288:  436:			fprintf(file_name,"P76,");
   219288:  437:			i = i - 1;
        -:  438:		}
        -:  439:    }
        -:  440:
    30769:  441:	fprintf(file_name,"P77,");
    30769:  442:    return flag;
        -:  443:}
        -:  444:
        -:  445:bool
   172370:  446:omatch(lin, i, pat, j)
        -:  447:char* lin;
        -:  448:int	*i;
        -:  449:char* pat;
        -:  450:int	j;
        -:  451:{
        -:  452:    char advance;
        -:  453:    bool result;
   172370:  454:    advance = -1;
        -:  455:
   172370:  456:	fprintf(file_name,"P78,");
   172370:  457:    if ((lin[*i] == ENDSTR))
        -:  458:	{
      366:  459:		fprintf(file_name,"P79,");
      366:  460:		result = false;
        -:  461:	}
        -:  462:    else 
        -:  463:    {
   172004:  464:		fprintf(file_name,"P80,");
   172004:  465:		if (!in_pat_set(pat[j]))
        -:  466:		{
    #####:  467:			fprintf(file_name,"P81,");
    #####:  468:			(void)fprintf(stdout, "in omatch: can't happen\n");
    #####:  469:			abort();	
        -:  470:		} 
        -:  471:		else
        -:  472:		{
   172004:  473:			fprintf(file_name,"P82,");
   172004:  474:			switch (pat[j]) 
        -:  475:			{			
   112281:  476:				case LITCHAR:
   112281:  477:					fprintf(file_name,"P83,");
   112281:  478:					if (lin[*i] == pat[j + 1])
        -:  479:					{
    25054:  480:						fprintf(file_name,"P84,");
    25054:  481:						advance = 1;
        -:  482:					}
   112281:  483:					fprintf(file_name,"P85,");
   112281:  484:					break ;	
     5869:  485:				case BOL:
     5869:  486:					fprintf(file_name,"P86,");
     5869:  487:					if (*i == 0)
        -:  488:					{
      604:  489:						fprintf(file_name,"P87,");
      604:  490:						advance = 0;
        -:  491:					}
     5869:  492:					fprintf(file_name,"P88,");
     5869:  493:					break ;
    19142:  494:				case ANY:
    19142:  495:				    fprintf(file_name,"P89,");
    19142:  496:					if (lin[*i] != NEWLINE)
        -:  497:					{
    17845:  498:						fprintf(file_name,"P90,");
    17845:  499:						advance = 1;
        -:  500:					}
    19142:  501:					fprintf(file_name,"P91,");
    19142:  502:					break ;
     3040:  503:				case EOL:
     3040:  504:				 	fprintf(file_name,"P92,");
     3040:  505:					if (lin[*i] == NEWLINE)
        -:  506:					{
      503:  507:						fprintf(file_name,"P93,");
      503:  508:						advance = 0;
        -:  509:					}
     3040:  510:					fprintf(file_name,"P94,");	
     3040:  511:					break ;
    17228:  512:				case CCL:
    17228:  513:					fprintf(file_name,"P95,");
    17228:  514:					if (locate(lin[*i], pat, j + 1))
        -:  515:					{
     3598:  516:						fprintf(file_name,"P96,");
     3598:  517:						advance = 1;
        -:  518:					}
    17228:  519:					fprintf(file_name,"P97,");
    17228:  520:					break ;
    14444:  521:				case NCCL:
    14444:  522:					fprintf(file_name,"P98,");
    14444:  523:					if ((lin[*i] != NEWLINE) && (!locate(lin[*i], pat, j+1)))
        -:  524:					{
    12158:  525:						fprintf(file_name,"P99,");
    12158:  526:						advance = 1;	
        -:  527:					}
    14444:  528:					fprintf(file_name,"P100,");
    14444:  529:					break;
    #####:  530:				default:
    #####:  531:					fprintf(file_name,"P101,");
    #####:  532:					Caseerror(pat[j]);
        -:  533:			};
        -:  534:		}	
        -:  535:    }
   172370:  536:    if ((advance >= 0)) 
        -:  537:    {
    59762:  538:		fprintf(file_name,"P102,");
    59762:  539:		*i = *i + advance;
    59762:  540:		result = true;
        -:  541:    } 
        -:  542:	else
        -:  543:	{
   112608:  544:		fprintf(file_name,"P103,");
   112608:  545:		result = false;
        -:  546:	}
   172370:  547:	fprintf(file_name,"P104,");
   172370:  548:    return result;
        -:  549:}
        -:  550:
        -:  551:
    77529:  552:patsize(pat, n)
        -:  553:char*	pat;
        -:  554:int	n;
        -:  555:{
        -:  556:    int size;
    77529:  557:	fprintf(file_name,"P105,");
    77529:  558:    if (!in_pat_set(pat[n])) 
        -:  559:	{
    #####:  560:		fprintf(file_name,"P106,");
    #####:  561:		(void)fprintf(stdout, "in patsize: can't happen\n");
    #####:  562:		abort();
        -:  563:    } 
        -:  564:	else
        -:  565:	{
    77529:  566:		fprintf(file_name,"P107,");
    77529:  567:		switch (pat[n]) 
        -:  568:		{
    32505:  569:		case LITCHAR: 
    32505:  570:			fprintf(file_name,"P108,");
    32505:  571:			size = 2; 
    32505:  572:			break;
        -:  573:			
    18952:  574:		case BOL:  
        -:  575:		case EOL:  
        -:  576:		case ANY:
    18952:  577:			fprintf(file_name,"P109,");
    18952:  578:			size = 1;
    18952:  579:			break;
    15756:  580:		case CCL:  
        -:  581:		case NCCL:
    15756:  582:			fprintf(file_name,"P110,");
    15756:  583:			size = pat[n + 1] + 2;
    15756:  584:			break ;
    10316:  585:		case CLOSURE:
    10316:  586:			fprintf(file_name,"P111,");
    10316:  587:			size = CLOSIZE;
    10316:  588:			break ;
    #####:  589:		default:
    #####:  590:			fprintf(file_name,"P112,");
    #####:  591:			Caseerror(pat[n]);
        -:  592:		}
        -:  593:	}
        -:  594:
    77529:  595:    return size;
        -:  596:}
        -:  597:
        -:  598:int
   137031:  599:amatch(lin, offset, pat, j)
        -:  600:char*	lin;
        -:  601:int	offset;
        -:  602:char*	pat;
        -:  603:int	j;
        -:  604:{
        -:  605:    int	i, k;
        -:  606:    bool result, done;
   137031:  607:    done = false;
        -:  608:
   137031:  609:	fprintf(file_name,"P113,");
   304470:  610:    while ((!done) && (pat[j] != ENDSTR))
        -:  611:	{
   167439:  612:		fprintf(file_name,"P114,");
   167439:  613:		if ((pat[j] == CLOSURE)) 
        -:  614:		{
    10316:  615:			j = j + patsize(pat, j);
    10316:  616:			i = offset;
    10316:  617:			fprintf(file_name,"P115,");
    25563:  618:			while ((!done) && (lin[i] != ENDSTR)) 
        -:  619:			{
    15247:  620:				result = omatch(lin, &i, pat, j);
    15247:  621:				fprintf(file_name,"P115,");
    15247:  622:				if (!result)
        -:  623:				{
    10100:  624:					fprintf(file_name,"P117,");
    10100:  625:					done = true;
        -:  626:				}		
        -:  627:			}
    10316:  628:			done = false;
    10316:  629:			fprintf(file_name,"P118,");
    22914:  630:			while ((!done) && (i >= offset)) 
        -:  631:			{
    12598:  632:				k = amatch(lin, i, pat, j + patsize(pat, j));
    12598:  633:				fprintf(file_name,"P119,");
    12598:  634:				if ((k >= 0))
        -:  635:				{
     4697:  636:					fprintf(file_name,"P120,");
     4697:  637:					done = true;
        -:  638:				}
        -:  639:				else
        -:  640:				{
     7901:  641:					fprintf(file_name,"P121,");
     7901:  642:					i = i - 1;
        -:  643:				}	
        -:  644:			}
    10316:  645:			fprintf(file_name,"P122,");
    10316:  646:			offset = k;
    10316:  647:			done = true;
        -:  648:		} 
        -:  649:		else 
        -:  650:		{
   157123:  651:			result = omatch(lin, &offset, pat, j);
   157123:  652:			fprintf(file_name,"P123,");
   157123:  653:			if ((!result)) 
        -:  654:			{
   102508:  655:				fprintf(file_name,"P124,");
   102508:  656:				offset = -1;
   102508:  657:				done = true;
        -:  658:			}
        -:  659:			else
        -:  660:			{
    54615:  661:				fprintf(file_name,"P125,");
    54615:  662:				j = j + patsize(pat, j);
        -:  663:			}
        -:  664:		}
        -:  665:	}
   137031:  666:	fprintf(file_name,"P126,");
   137031:  667:	return offset;
        -:  668:}
        -:  669:
        -:  670:void
    24049:  671:putsub(lin, s1, s2, sub)
        -:  672:char* lin;
        -:  673:int	s1, s2;
        -:  674:char* sub;
        -:  675:{
        -:  676:    int	i;
        -:  677:    int	j;
    24049:  678:    i = 0;
    24049:  679:	fprintf(file_name,"P127,");
   332492:  680:    while ((sub[i] != ENDSTR)) 
        -:  681:	{
   308443:  682:		fprintf(file_name,"P128,");
   308443:  683:		if ((sub[i] == DITTO))
        -:  684:		{
    11101:  685:			fprintf(file_name,"P129,");
    25106:  686:			for (j = s1; j < s2; j++) 
        -:  687:		    {
    14005:  688:				fprintf(file_name,"P130,");
    14005:  689:				fputc(lin[j],stdout);
        -:  690:		    }
        -:  691:		}
        -:  692:		else	
        -:  693:		{
   297342:  694:			fprintf(file_name,"P131,");
   297342:  695:		    fputc(sub[i],stdout);
        -:  696:		}
   308443:  697:		fprintf(file_name,"P132,");
   308443:  698:		i = i + 1;
        -:  699:    }
    24049:  700:}
        -:  701:
        -:  702:void
     9426:  703:subline(lin, pat, sub)
        -:  704:char *lin;
        -:  705:char *pat;
        -:  706:char *sub;
        -:  707:{	
        -:  708:	int	i, lastm, m;
     9426:  709:	lastm = -1;
     9426:  710:	i = 0;
     9426:  711:	fprintf(file_name,"P133,");
   133859:  712:	while ((lin[i] != ENDSTR)) 
        -:  713:	{
   124433:  714:	    m = amatch(lin, i, pat, 0);
   124433:  715:	    fprintf(file_name,"P134,");
   124433:  716:		if ((m >= 0) && (lastm != m)) 
        -:  717:		{
    24049:  718:			fprintf(file_name,"P135,");
    24049:  719:			putsub(lin, i, m, sub);
    24049:  720:			lastm = m;
        -:  721:	    }
   124433:  722:		fprintf(file_name,"P136,");
   124433:  723:	    if ((m == -1) || (m == i))
        -:  724:		{
   102680:  725:			fprintf(file_name,"P137,");
   102680:  726:			fputc(lin[i],stdout);
   102680:  727:			i = i + 1;
        -:  728:	    } 
        -:  729:		else
        -:  730:		{
    21753:  731:			fprintf(file_name,"P138,");
    21753:  732:			i = m;
        -:  733:		}
        -:  734:	}
     9426:  735:}
        -:  736:
        -:  737:void
     4383:  738:change(pat, sub)
        -:  739:char *pat, *sub;
        -:  740:{
        -:  741:    string  line;
        -:  742:    bool result;
     4383:  743:    result = get_line(line, MAXSTR);
        -:  744:	
     4383:  745:    fprintf(file_name,"P139,");
    13809:  746:	while ((result)) 
        -:  747:	{
     9426:  748:		fprintf(file_name,"P140,");
     9426:  749:		subline(line, pat, sub);
     9426:  750:		result = get_line(line, MAXSTR);
        -:  751:    }
     4383:  752:}
        -:  753:
     5542:  754:main(argc, argv)
        -:  755:int	argc;
        -:  756:char	*argv[];
        -:  757:{
     5542:  758:	file_name=fopen("v30.txt","a+"); 
     5542:  759:    if(!file_name)
        -:  760:    {	
    #####:  761:        printf("File could not be opened! \n");
    #####:  762:        fclose(file_name);
    #####:  763:        exit(0);
        -:  764:    }
        -:  765:	string pat, sub;
        -:  766:	bool result;
        -:  767:
     5542:  768:	fprintf(file_name,"\nP1,");
     5542:  769:	if (argc < 2) 
        -:  770:	{
       22:  771:		fprintf(file_name,"P2,");
       22:  772:		(void)fprintf(stdout, "usage: change from [to]\n");
       22:  773:		exit(1);
        -:  774:	};
        -:  775:	
     5520:  776:	result = getpat(argv[1], pat);
     5520:  777:	fprintf(file_name,"P3,");
     5520:  778:	if (!result)
        -:  779:	{
      854:  780:		fprintf(file_name,"P4,");
      854:  781:		(void)fprintf(stdout, "change: illegal \"from\" pattern\n");
      854:  782:		exit(2);
        -:  783:	}
        -:  784:
     4666:  785:	fprintf(file_name,"P5,");
     4666:  786:	if (argc >= 3)
        -:  787:	{
     4567:  788:		result = getsub(argv[2], sub);
     4567:  789:		fprintf(file_name,"P6,");
     4567:  790:		if (!result)
        -:  791:		{	
      283:  792:			fprintf(file_name,"P7,");
      283:  793:			(void)fprintf(stdout, "change: illegal \"to\" string\n");
      283:  794:			exit(3);
        -:  795:		}
        -:  796:	} 
        -:  797:	else
        -:  798:	{
       99:  799:		fprintf(file_name,"P8,");
       99:  800:		sub[0] = '\0';
        -:  801:	}
        -:  802:
     4383:  803:	fprintf(file_name,"P9,");
     4383:  804:	change(pat, sub);
     4383:  805:	return 0;
        -:  806:}
        -:  807:
        -:  808:void
    #####:  809:Caseerror(n)
        -:  810:int	n;
        -:  811:{
    #####:  812:	fprintf(file_name,"P10,");
    #####:  813:	(void)fprintf(stdout, "Missing case limb: line %d\n", n);
    #####:  814:	exit(4);
        -:  815:}
