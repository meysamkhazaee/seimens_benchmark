        -:    0:Source:replace_instrumented.c
        -:    0:Graph:replace_instrumented.gcno
        -:    0:Data:replace_instrumented.gcda
        -:    0:Runs:5542
        -:    1:/*  -*- Last-Edit:  Mon Dec  7 10:31:51 1992 by Tarak S. Goradia; -*- */
        -:    2:
        -:    3:extern void	exit();
        -:    4:# include <stdio.h>
        -:    5:
        -:    6:void	Caseerror();
        -:    7:
        -:    8:typedef char	bool;
        -:    9:# define false 0
        -:   10:# define true  1
        -:   11:# define NULL 0
        -:   12:
        -:   13:# define MAXSTR 100
        -:   14:# define MAXPAT MAXSTR
        -:   15:
        -:   16:# define ENDSTR  '\0'
        -:   17:# define ESCAPE  '@'
        -:   18:# define CLOSURE '*'
        -:   19:# define BOL     '%'
        -:   20:# define EOL     '$'
        -:   21:# define ANY     '?'
        -:   22:# define CCL     '['
        -:   23:# define CCLEND  ']'
        -:   24:# define NEGATE  '^'
        -:   25:# define NCCL    '!'
        -:   26:# define LITCHAR 'c'
        -:   27:# define DITTO   -1
        -:   28:# define DASH    '-'
        -:   29:
        -:   30:# define TAB     9
        -:   31:# define NEWLINE 10
        -:   32:
        -:   33:# define CLOSIZE 1
        -:   34:FILE* file_name = NULL;
        -:   35:
        -:   36:typedef char	character;
        -:   37:typedef char string[MAXSTR];
        -:   38:
        -:   39:void
    14789:   40:get_line(s, maxsize, result)
        -:   41:char	*s;
        -:   42:int	maxsize;
        -:   43:bool *result;
        -:   44:{
    14789:   45:	fprintf(file_name,"P11,");
    14789:   46:    *result = true;
    14789:   47:    if (!fgets(s, 104, stdin)) 
        -:   48:	{
     4658:   49:      fprintf(file_name,"P141,");
     4658:   50:	  *result = 0;
        -:   51:    }
    14789:   52:}
        -:   53:int
   182913:   54:addstr(c, outset, j, maxset)
        -:   55:char c;
        -:   56:char *outset;
        -:   57:int	*j;
        -:   58:int	maxset;
        -:   59:{
        -:   60:    bool result;
   182913:   61:	fprintf(file_name,"P12,");
   182913:   62:    if (*j >= maxset)
        -:   63:	{
    45218:   64:		fprintf(file_name,"P13,");
    45218:   65:		result = false;
        -:   66:	}
        -:   67:    else 
        -:   68:	{
   137695:   69:		fprintf(file_name,"P14,");
   137695:   70:		outset[*j] = c;
   137695:   71:		*j = *j + 1;
   137695:   72:		result = true;
        -:   73:    }
   182913:   74:	fprintf(file_name,"P15,");
   182913:   75:    return result;
        -:   76:}
        -:   77:
        -:   78:char
    75119:   79:esc(s, i)
        -:   80:char *s;
        -:   81:int	*i;
        -:   82:{
        -:   83:    char result;
    75119:   84:	fprintf(file_name,"P16,");
    75119:   85:    if (s[*i] != ESCAPE)
        -:   86:	{
    69922:   87:		fprintf(file_name,"P17,");
    69922:   88:		result = s[*i];
        -:   89:	}
     5197:   90:    else if (s[*i + 1] == ENDSTR)
        -:   91:	{
       53:   92:		fprintf(file_name,"P18,");
       53:   93:		result = ESCAPE;
        -:   94:	}
        -:   95:	else 
        -:   96:	{
     5144:   97:	    *i = *i + 1;
     5144:   98:	    fprintf(file_name,"P19,");
     5144:   99:		if (s[*i] == 'n')
        -:  100:		{
     1001:  101:			fprintf(file_name,"P20,");
     1001:  102:			result = NEWLINE;
        -:  103:		}
     4143:  104:	    else if (s[*i] == 't')
        -:  105:		{
      879:  106:			fprintf(file_name,"P21,");
      879:  107:			result = TAB;
        -:  108:		}
        -:  109:		else
        -:  110:		{
     3264:  111:			fprintf(file_name,"P22,");
     3264:  112:			result = s[*i];
        -:  113:		}  
        -:  114:	}
    75119:  115:	fprintf(file_name,"P23,");
    75119:  116:    return result;
        -:  117:}
        -:  118:
        -:  119:void change();
        -:  120:
        -:  121:void
     6360:  122:dodash(delim, src, i, dest, j, maxset)
        -:  123:char delim;
        -:  124:char *src;
        -:  125:int	*i;
        -:  126:char *dest;
        -:  127:int	*j;
        -:  128:int	maxset;
        -:  129:{
        -:  130:    int	k;
        -:  131:    bool junk;
        -:  132:    char escjunk;
     6360:  133:	fprintf(file_name,"P24,");
    24340:  134:    while ((src[*i] != delim) && (src[*i] != ENDSTR)) 
        -:  135:    {
    17980:  136:		fprintf(file_name,"P25,");
    17980:  137:		if (src[*i - 1] == ESCAPE) 
        -:  138:		{
      566:  139:			fprintf(file_name,"P26,");
      566:  140:			escjunk = esc(src, i);
      566:  141:			junk = addstr(escjunk, dest, j, maxset);
        -:  142:		} 
    17414:  143:		else if (src[*i] != DASH)
        -:  144:		{
    10753:  145:			fprintf(file_name,"P27,");
    10753:  146:			junk = addstr(src[*i], dest, j, maxset);
        -:  147:		}
     6661:  148:		else if (*j <= 1 || src[*i + 1] == ENDSTR)
        -:  149:		{
       96:  150:			fprintf(file_name,"P28,");
       96:  151:			junk = addstr(DASH, dest, j, maxset);
        -:  152:		}
     6565:  153:		else if ((isalnum(src[*i - 1])) && (isalnum(src[*i + 1])) && (src[*i - 1] <= src[*i + 1]))
        -:  154:		{
     4825:  155:			fprintf(file_name,"P29,");
    39699:  156:			for (k = src[*i-1]+1; k<=src[*i+1]; k++) 
        -:  157:			{
    34874:  158:				fprintf(file_name,"P30,");
    34874:  159:				junk = addstr(k, dest, j, maxset);
        -:  160:			}
     4825:  161:			fprintf(file_name,"P31,");	
     4825:  162:			*i = *i + 1;	
        -:  163:		} 
        -:  164:		else
        -:  165:		{
     1740:  166:			fprintf(file_name,"P32,");
     1740:  167:			junk = addstr(DASH, dest, j, maxset);
        -:  168:		}	
    17980:  169:		fprintf(file_name,"P33,");
    17980:  170:		(*i) = (*i) + 1;
        -:  171:    }
     6360:  172:}
        -:  173:
        -:  174:bool
     6360:  175:getccl(arg, i, pat, j)
        -:  176:char *arg;
        -:  177:int	*i;
        -:  178:char *pat;
        -:  179:int	*j;
        -:  180:{
        -:  181:    int	jstart;
        -:  182:    bool junk;
     6360:  183:    *i = *i + 1;
     6360:  184:	fprintf(file_name,"P34,");
     6360:  185:    if (arg[*i] == NEGATE) 
        -:  186:	{
     3053:  187:		fprintf(file_name,"P35,");
     3053:  188:		junk = addstr(NCCL, pat, j, MAXPAT);
     3053:  189:		*i = *i + 1;
        -:  190:    } 
        -:  191:	else
        -:  192:	{
     3307:  193:		fprintf(file_name,"P36,");
     3307:  194:		junk = addstr(CCL, pat, j, MAXPAT);
        -:  195:	}
     6360:  196:	fprintf(file_name,"P37,");
     6360:  197:    jstart = *j;
     6360:  198:    junk = addstr(0, pat, j, MAXPAT);
     6360:  199:    dodash(CCLEND, arg, i, pat, j, MAXPAT);
     6360:  200:    pat[jstart] = *j - jstart - 1;
     6360:  201:    return (arg[*i] == CCLEND);
        -:  202:}
        -:  203:
        -:  204:void
     1968:  205:stclose(pat, j, lastj)
        -:  206:char *pat;
        -:  207:int	*j;
        -:  208:int	lastj;
        -:  209:{
        -:  210:    int	jt;
        -:  211:    int	jp;
        -:  212:    bool junk;
     1968:  213:	fprintf(file_name,"P38,");
     7078:  214:    for (jp = *j - 1; jp >= lastj ; jp--) 
        -:  215:    {
     5110:  216:		fprintf(file_name,"P39,");
     5110:  217:		jt = jp + CLOSIZE;
     5110:  218:		junk = addstr(pat[jp], pat, &jt, MAXPAT);
        -:  219:    }
     1968:  220:	fprintf(file_name,"P40,");
     1968:  221:    *j = *j + CLOSIZE;
     1968:  222:    pat[lastj] = CLOSURE;
     1968:  223:}
        -:  224:
     2048:  225:bool in_set_2(c)
        -:  226:char c;
        -:  227:{
     2048:  228:	fprintf(file_name,"P41,");
     2048:  229:  	return (c == BOL || c == EOL || c == CLOSURE);
        -:  230:}      
        -:  231:
   303049:  232:bool in_pat_set(c)
        -:  233:char c;
        -:  234:{
   303049:  235:	fprintf(file_name,"P42,");
  303049*:  236:  	return (c == LITCHAR || c == BOL || c == EOL || c == ANY || c == CCL || c == NCCL || c == CLOSURE);
        -:  237:}      
        -:  238:
        -:  239:int
     5520:  240:makepat(arg, start, delim, pat)
        -:  241:char	*arg;
        -:  242:int	start;
        -:  243:char	delim;
        -:  244:char	*pat;
        -:  245:{
        -:  246:    int	result;
        -:  247:    int	i, j, lastj, lj;
        -:  248:    bool done, junk;
        -:  249:    bool getres;
        -:  250:    char escjunk;
        -:  251:
     5520:  252:    j = 0;
     5520:  253:    i = start;
     5520:  254:    lastj = 0;
     5520:  255:    done = false;
     5520:  256:	fprintf(file_name,"P43,");
    44034:  257:    while ((!done) && (arg[i] != delim) && (arg[i] != ENDSTR)) 
        -:  258:	{
    38514:  259:		lj = j;
    38514:  260:		fprintf(file_name,"P44,");
    38514:  261:		if ((arg[i] == ANY))
        -:  262:		{
     3447:  263:			fprintf(file_name,"P45,");
     3447:  264:			junk = addstr(ANY, pat, &j, MAXPAT);
        -:  265:		}
    35067:  266:		else if ((arg[i] == BOL) && (i == start))
        -:  267:		{
      387:  268:			fprintf(file_name,"P46,");
      387:  269:			junk = addstr(BOL, pat, &j, MAXPAT);
        -:  270:		}
    34680:  271:		else if ((arg[i] == EOL) && (arg[i+1] == delim))
        -:  272:		{
      410:  273:			fprintf(file_name,"P47,");
      410:  274:			junk = addstr(EOL, pat, &j, MAXPAT);
        -:  275:		}
    34270:  276:		else if ((arg[i] == CCL)) 
        -:  277:		{
     6360:  278:			fprintf(file_name,"P48,");
     6360:  279:			getres = getccl(arg, &i, pat, &j);
     6360:  280:			done = (bool)(getres == false);
        -:  281:		} 
    27910:  282:		else if ((arg[i] == CLOSURE) && (i > start)) 
        -:  283:		{
     2048:  284:			fprintf(file_name,"P49,");
     2048:  285:			lj = lastj;
     2048:  286:			if (in_set_2(pat[lj]))
        -:  287:			{
       80:  288:				fprintf(file_name,"P50,");
       80:  289:				done = true;
        -:  290:			}	
        -:  291:			else
        -:  292:			{
     1968:  293:				fprintf(file_name,"P51,");
     1968:  294:				stclose(pat, &j, lastj);
        -:  295:			}
        -:  296:		} 
        -:  297:		else 
        -:  298:		{
    25862:  299:			fprintf(file_name,"P52,");
    25862:  300:			junk = addstr(LITCHAR, pat, &j, MAXPAT);
    25862:  301:			escjunk = esc(arg, &i);
    25862:  302:			junk = addstr(escjunk, pat, &j, MAXPAT);
        -:  303:		}
        -:  304:		
    38514:  305:		lastj = lj;
    38514:  306:		fprintf(file_name,"P53,");
    38514:  307:		if ((!done))
        -:  308:		{
    38110:  309:			fprintf(file_name,"P54,");
    38110:  310:			i = i + 1;
        -:  311:		}
        -:  312:    }	
     5520:  313:    junk = addstr(ENDSTR, pat, &j, MAXPAT);
     5520:  314:    fprintf(file_name,"P55,");
     5520:  315:	if ((done) || (arg[i] != delim))
        -:  316:	{
      404:  317:		fprintf(file_name,"P56,");
      404:  318:		result = 0;
        -:  319:	}
     5116:  320:    else if ((!junk))
        -:  321:	{
      106:  322:		fprintf(file_name,"P57,");
      106:  323:		result = 0;
        -:  324:	}
        -:  325:	else
        -:  326:	{
     5010:  327:		fprintf(file_name,"P58,");
     5010:  328:		result = i;
        -:  329:	}
     5520:  330:	fprintf(file_name,"P59,");
     5520:  331:    return result;
        -:  332:}
        -:  333:
        -:  334:int
     5520:  335:getpat(arg, pat)
        -:  336:char* arg;
        -:  337:char* pat;
        -:  338:{
     5520:  339:	fprintf(file_name,"P60,");
        -:  340:    int	makeres;
     5520:  341:    makeres = makepat(arg, 0, ENDSTR, pat);
     5520:  342:    return (makeres > 0);
        -:  343:}
        -:  344:
        -:  345:int
     4838:  346:makesub(arg, from, delim, sub)
        -:  347:char* arg;
        -:  348:int	from;
        -:  349:character delim;
        -:  350:char*	sub;
        -:  351:{
        -:  352:    int  result;
        -:  353:    int	i, j;
        -:  354:    bool	junk;
        -:  355:    character	escjunk;
        -:  356:
     4838:  357:    j = 0;
     4838:  358:    i = from;
        -:  359:
     4838:  360:	fprintf(file_name,"P61,");
    55566:  361:    while ((arg[i] != delim) && (arg[i] != ENDSTR)) 
        -:  362:	{
    50728:  363:		fprintf(file_name,"P62,");
    50728:  364:		if ((arg[i] == (unsigned)('&')))
        -:  365:		{
     2037:  366:			fprintf(file_name,"P63,");
     2037:  367:			junk = addstr(DITTO, sub, &j, MAXPAT);
        -:  368:		}
        -:  369:		else 
        -:  370:		{
    48691:  371:			fprintf(file_name,"P64,");
    48691:  372:			escjunk = esc(arg, &i);
    48691:  373:			junk = addstr(escjunk, sub, &j, MAXPAT);
        -:  374:		}
    50728:  375:		fprintf(file_name,"P65,");
    50728:  376:		i = i + 1;
        -:  377:    }
     4838:  378:	fprintf(file_name,"P66,");
     4838:  379:    if (arg[i] != delim)
        -:  380:	{
    #####:  381:		fprintf(file_name,"P67,");
    #####:  382:		result = 0;
        -:  383:	}
        -:  384:    else 
        -:  385:	{
     4838:  386:		junk = addstr(ENDSTR, &(*sub), &j, MAXPAT);
     4838:  387:		fprintf(file_name,"P68,");
     4838:  388:		if ((!junk))
        -:  389:		{
       62:  390:			fprintf(file_name,"P69,");
       62:  391:			result = 0;
        -:  392:		}
        -:  393:		else
        -:  394:		{
     4776:  395:			fprintf(file_name,"P70,");
     4776:  396:			result = i;
        -:  397:		}	
        -:  398:    }
     4838:  399:	fprintf(file_name,"P71,");	
     4838:  400:    return result;
        -:  401:}
        -:  402:
        -:  403:bool
     4838:  404:getsub(arg, sub)
        -:  405:char* arg;
        -:  406:char* sub;
        -:  407:{
     4838:  408:	fprintf(file_name,"P72,");
        -:  409:    int	makeres;
     4838:  410:    makeres = makesub(arg, 0, ENDSTR, sub);
     4838:  411:    return (makeres > 0);
        -:  412:}
        -:  413:
        -:  414:void subline();
        -:  415:
        -:  416:bool
    50574:  417:locate(c, pat, offset)
        -:  418:character c;
        -:  419:char* pat;
        -:  420:int	offset;
        -:  421:{
        -:  422:    int	i;
        -:  423:    bool flag;
    50574:  424:    flag = false;
    50574:  425:    i = offset + pat[offset];
        -:  426:
    50574:  427:    fprintf(file_name,"P73,");
   382139:  428:	while ((i > offset))
        -:  429:    {
   331565:  430:		fprintf(file_name,"P74,");
   331565:  431:		if (c == pat[i]) 
        -:  432:		{
    15129:  433:			fprintf(file_name,"P75,");
    15129:  434:			flag = true;
    15129:  435:			i = offset;
        -:  436:		} 
        -:  437:		else
        -:  438:		{
   316436:  439:			fprintf(file_name,"P76,");
   316436:  440:			i = i - 1;
        -:  441:		}
        -:  442:    }
        -:  443:
    50574:  444:	fprintf(file_name,"P77,");
    50574:  445:    return flag;
        -:  446:}
        -:  447:
        -:  448:bool
   203997:  449:omatch(lin, i, pat, j)
        -:  450:char* lin;
        -:  451:int	*i;
        -:  452:char* pat;
        -:  453:int	j;
        -:  454:{
        -:  455:    char advance;
        -:  456:    bool result;
   203997:  457:    advance = -1;
        -:  458:
   203997:  459:	fprintf(file_name,"P78,");
   203997:  460:    if ((lin[*i] == ENDSTR))
        -:  461:	{
      362:  462:		fprintf(file_name,"P79,");
      362:  463:		result = false;
        -:  464:	}
        -:  465:    else 
        -:  466:    {
   203635:  467:		fprintf(file_name,"P80,");
   203635:  468:		if (!in_pat_set(pat[j]))
        -:  469:		{
    #####:  470:			fprintf(file_name,"P81,");
    #####:  471:			(void)fprintf(stdout, "in omatch: can't happen\n");
    #####:  472:			abort();	
        -:  473:		} 
        -:  474:		else
        -:  475:		{
   203635:  476:			fprintf(file_name,"P82,");
   203635:  477:			switch (pat[j]) 
        -:  478:			{			
   118448:  479:				case LITCHAR:
   118448:  480:					fprintf(file_name,"P83,");
   118448:  481:					if (lin[*i] == pat[j + 1])
        -:  482:					{
    26019:  483:						fprintf(file_name,"P84,");
    26019:  484:						advance = 1;
        -:  485:					}
   118448:  486:					fprintf(file_name,"P85,");
   118448:  487:					break ;	
     6345:  488:				case BOL:
     6345:  489:					fprintf(file_name,"P86,");
     6345:  490:					if (*i == 0)
        -:  491:					{
      695:  492:						fprintf(file_name,"P87,");
      695:  493:						advance = 0;
        -:  494:					}
     6345:  495:					fprintf(file_name,"P88,");
     6345:  496:					break ;
    22999:  497:				case ANY:
    22999:  498:				    fprintf(file_name,"P89,");
    22999:  499:					if (lin[*i] != NEWLINE)
        -:  500:					{
    21336:  501:						fprintf(file_name,"P90,");
    21336:  502:						advance = 1;
        -:  503:					}
    22999:  504:					fprintf(file_name,"P91,");
    22999:  505:					break ;
     4227:  506:				case EOL:
     4227:  507:				 	fprintf(file_name,"P92,");
     4227:  508:					if (lin[*i] == NEWLINE)
        -:  509:					{
      655:  510:						fprintf(file_name,"P93,");
      655:  511:						advance = 0;
        -:  512:					}
     4227:  513:					fprintf(file_name,"P94,");	
     4227:  514:					break ;
    34488:  515:				case CCL:
    34488:  516:					fprintf(file_name,"P95,");
    34488:  517:					if (locate(lin[*i], pat, j + 1))
        -:  518:					{
    13270:  519:						fprintf(file_name,"P96,");
    13270:  520:						advance = 1;
        -:  521:					}
    34488:  522:					fprintf(file_name,"P97,");
    34488:  523:					break ;
    17128:  524:				case NCCL:
    17128:  525:					fprintf(file_name,"P98,");
    17128:  526:					if ((lin[*i] != NEWLINE) && (!locate(lin[*i], pat, j+1)))
        -:  527:					{
    14227:  528:						fprintf(file_name,"P99,");
    14227:  529:						advance = 1;	
        -:  530:					}
    17128:  531:					fprintf(file_name,"P100,");
    17128:  532:					break;
    #####:  533:				default:
    #####:  534:					fprintf(file_name,"P101,");
    #####:  535:					Caseerror(pat[j]);
        -:  536:			};
        -:  537:		}	
        -:  538:    }
   203997:  539:    if ((advance >= 0)) 
        -:  540:    {
    76202:  541:		fprintf(file_name,"P102,");
    76202:  542:		*i = *i + advance;
    76202:  543:		result = true;
        -:  544:    } 
        -:  545:	else
        -:  546:	{
   127795:  547:		fprintf(file_name,"P103,");
   127795:  548:		result = false;
        -:  549:	}
   203997:  550:	fprintf(file_name,"P104,");
   203997:  551:    return result;
        -:  552:}
        -:  553:
        -:  554:
    99414:  555:patsize(pat, n)
        -:  556:char*	pat;
        -:  557:int	n;
        -:  558:{
        -:  559:    int size;
    99414:  560:	fprintf(file_name,"P105,");
    99414:  561:    if (!in_pat_set(pat[n])) 
        -:  562:	{
    #####:  563:		fprintf(file_name,"P106,");
    #####:  564:		(void)fprintf(stdout, "in patsize: can't happen\n");
    #####:  565:		abort();
        -:  566:    } 
        -:  567:	else
        -:  568:	{
    99414:  569:		fprintf(file_name,"P107,");
    99414:  570:		switch (pat[n]) 
        -:  571:		{
    33620:  572:		case LITCHAR: 
    33620:  573:			fprintf(file_name,"P108,");
    33620:  574:			size = 2; 
    33620:  575:			break;
        -:  576:			
    21187:  577:		case BOL:  
        -:  578:		case EOL:  
        -:  579:		case ANY:
    21187:  580:			fprintf(file_name,"P109,");
    21187:  581:			size = 1;
    21187:  582:			break;
    26599:  583:		case CCL:  
        -:  584:		case NCCL:
    26599:  585:			fprintf(file_name,"P110,");
    26599:  586:			size = pat[n + 1] + 2;
    26599:  587:			break ;
    18008:  588:		case CLOSURE:
    18008:  589:			fprintf(file_name,"P111,");
    18008:  590:			size = CLOSIZE;
    18008:  591:			break ;
    #####:  592:		default:
    #####:  593:			fprintf(file_name,"P112,");
    #####:  594:			Caseerror(pat[n]);
        -:  595:		}
        -:  596:	}
        -:  597:
    99414:  598:    return size;
        -:  599:}
        -:  600:
        -:  601:int
   158511:  602:amatch(lin, offset, pat, j)
        -:  603:char*	lin;
        -:  604:int	offset;
        -:  605:char*	pat;
        -:  606:int	j;
        -:  607:{
        -:  608:    int	i, k;
        -:  609:    bool result, done;
   158511:  610:    done = false;
        -:  611:
   158511:  612:	fprintf(file_name,"P113,");
   343466:  613:    while ((!done) && (pat[j] != ENDSTR))
        -:  614:	{
   184955:  615:		fprintf(file_name,"P114,");
   184955:  616:		if ((pat[j] == CLOSURE)) 
        -:  617:		{
    18008:  618:			j = j + patsize(pat, j);
    18008:  619:			i = offset;
    18008:  620:			fprintf(file_name,"P115,");
    55058:  621:			while ((!done) && (lin[i] != ENDSTR)) 
        -:  622:			{
    37050:  623:				result = omatch(lin, &i, pat, j);
    37050:  624:				fprintf(file_name,"P115,");
    37050:  625:				if (!result)
        -:  626:				{
    17783:  627:					fprintf(file_name,"P117,");
    17783:  628:					done = true;
        -:  629:				}		
        -:  630:			}
    18008:  631:			done = false;
    18008:  632:			fprintf(file_name,"P118,");
    42479:  633:			while ((!done) && (i >= offset)) 
        -:  634:			{
    24471:  635:				k = amatch(lin, i, pat, j + patsize(pat, j));
    24471:  636:				fprintf(file_name,"P119,");
    24471:  637:				if ((k >= 0))
        -:  638:				{
    11112:  639:					fprintf(file_name,"P120,");
    11112:  640:					done = true;
        -:  641:				}
        -:  642:				else
        -:  643:				{
    13359:  644:					fprintf(file_name,"P121,");
    13359:  645:					i = i - 1;
        -:  646:				}	
        -:  647:			}
    18008:  648:			fprintf(file_name,"P122,");
    18008:  649:			offset = k;
    18008:  650:			done = true;
        -:  651:		} 
        -:  652:		else 
        -:  653:		{
   166947:  654:			result = omatch(lin, &offset, pat, j);
   166947:  655:			fprintf(file_name,"P123,");
   166947:  656:			if ((!result)) 
        -:  657:			{
   110012:  658:				fprintf(file_name,"P124,");
   110012:  659:				offset = -1;
   110012:  660:				done = true;
        -:  661:			}
        -:  662:			else
        -:  663:			{
    56935:  664:				fprintf(file_name,"P125,");
    56935:  665:				j = j + patsize(pat, j);
        -:  666:			}
        -:  667:		}
        -:  668:	}
   158511:  669:	fprintf(file_name,"P126,");
   158511:  670:	return offset;
        -:  671:}
        -:  672:
        -:  673:void
    29788:  674:putsub(lin, s1, s2, sub)
        -:  675:char* lin;
        -:  676:int	s1, s2;
        -:  677:char* sub;
        -:  678:{
        -:  679:    int	i;
        -:  680:    int	j;
    29788:  681:    i = 0;
    29788:  682:	fprintf(file_name,"P127,");
   389862:  683:    while ((sub[i] != ENDSTR)) 
        -:  684:	{
   360074:  685:		fprintf(file_name,"P128,");
   360074:  686:		if ((sub[i] == DITTO))
        -:  687:		{
    25813:  688:			fprintf(file_name,"P129,");
    59194:  689:			for (j = s1; j < s2; j++) 
        -:  690:		    {
    33381:  691:				fprintf(file_name,"P130,");
    33381:  692:				fputc(lin[j],stdout);
        -:  693:		    }
        -:  694:		}
        -:  695:		else	
        -:  696:		{
   334261:  697:			fprintf(file_name,"P131,");
   334261:  698:		    fputc(sub[i],stdout);
        -:  699:		}
   360074:  700:		fprintf(file_name,"P132,");
   360074:  701:		i = i + 1;
        -:  702:    }
    29788:  703:}
        -:  704:
        -:  705:void
    10131:  706:subline(lin, pat, sub)
        -:  707:char *lin;
        -:  708:char *pat;
        -:  709:char *sub;
        -:  710:{	
        -:  711:	int	i, lastm, m;
    10131:  712:	lastm = -1;
    10131:  713:	i = 0;
    10131:  714:	fprintf(file_name,"P133,");
   144171:  715:	while ((lin[i] != ENDSTR)) 
        -:  716:	{
   134040:  717:	    m = amatch(lin, i, pat, 0);
   134040:  718:	    fprintf(file_name,"P134,");
   134040:  719:		if ((m >= 0) && (lastm != m)) 
        -:  720:		{
    29788:  721:			fprintf(file_name,"P135,");
    29788:  722:			putsub(lin, i, m, sub);
    29788:  723:			lastm = m;
        -:  724:	    }
   134040:  725:		fprintf(file_name,"P136,");
   134040:  726:	    if ((m == -1) || (m == i))
        -:  727:		{
   111303:  728:			fprintf(file_name,"P137,");
   111303:  729:			fputc(lin[i],stdout);
   111303:  730:			i = i + 1;
        -:  731:	    } 
        -:  732:		else
        -:  733:		{
    22737:  734:			fprintf(file_name,"P138,");
    22737:  735:			i = m;
        -:  736:		}
        -:  737:	}
    10131:  738:}
        -:  739:
        -:  740:void
     4658:  741:change(pat, sub)
        -:  742:char *pat, *sub;
        -:  743:{
        -:  744:    string  line;
        -:  745:    bool result;
     4658:  746:    get_line(line, MAXSTR, &result);
        -:  747:	
     4658:  748:    fprintf(file_name,"P139,");
    14789:  749:	while ((result)) 
        -:  750:	{
    10131:  751:		fprintf(file_name,"P140,");
    10131:  752:		subline(line, pat, sub);
    10131:  753:		get_line(line, MAXSTR, &result);
        -:  754:    }
     4658:  755:}
        -:  756:
     5542:  757:main(argc, argv)
        -:  758:int	argc;
        -:  759:char	*argv[];
        -:  760:{
     5542:  761:	file_name=fopen("v19.txt","a+"); 
     5542:  762:    if(!file_name)
        -:  763:    {	
    #####:  764:        printf("File could not be opened! \n");
    #####:  765:        fclose(file_name);
    #####:  766:        exit(0);
        -:  767:    }
        -:  768:	string pat, sub;
        -:  769:	bool result;
        -:  770:
     5542:  771:	fprintf(file_name,"\nP1,");
     5542:  772:	if (argc < 2) 
        -:  773:	{
       22:  774:		fprintf(file_name,"P2,");
       22:  775:		(void)fprintf(stdout, "usage: change from [to]\n");
       22:  776:		exit(1);
        -:  777:	};
        -:  778:	
     5520:  779:	result = getpat(argv[1], pat);
     5520:  780:	fprintf(file_name,"P3,");
     5520:  781:	if (!result)
        -:  782:	{
      570:  783:		fprintf(file_name,"P4,");
      570:  784:		(void)fprintf(stdout, "change: illegal \"from\" pattern\n");
      570:  785:		exit(2);
        -:  786:	}
        -:  787:
     4950:  788:	fprintf(file_name,"P5,");
     4950:  789:	if (argc >= 3)
        -:  790:	{
     4838:  791:		result = getsub(argv[2], sub);
     4838:  792:		fprintf(file_name,"P6,");
     4838:  793:		if (!result)
        -:  794:		{	
      292:  795:			fprintf(file_name,"P7,");
      292:  796:			(void)fprintf(stdout, "change: illegal \"to\" string\n");
      292:  797:			exit(3);
        -:  798:		}
        -:  799:	} 
        -:  800:	else
        -:  801:	{
      112:  802:		fprintf(file_name,"P8,");
      112:  803:		sub[0] = '\0';
        -:  804:	}
        -:  805:
     4658:  806:	fprintf(file_name,"P9,");
     4658:  807:	change(pat, sub);
     4658:  808:	return 0;
        -:  809:}
        -:  810:
        -:  811:void
    #####:  812:Caseerror(n)
        -:  813:int	n;
        -:  814:{
    #####:  815:	fprintf(file_name,"P10,");
    #####:  816:	(void)fprintf(stdout, "Missing case limb: line %d\n", n);
    #####:  817:	exit(4);
        -:  818:}
